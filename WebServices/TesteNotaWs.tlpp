//Bibliotecas 
#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "Topconn.ch"

namespace wsnotafiscal

/*/{Protheus.doc} User Function TesteNotaWs
apenas um teste - Busca de apenas 1 registro
@author Henryque Oliveira
@since 10/09/2025
@version 1.0
@type User Function
@obs Parâmetros a receber na requisição:
    id = Código do Registro na Tabela
/*/
@get('TesteNotaWs/get/id/') 
User Function TesteNotaWs()
    Local jResponse := JsonObject():New() As Json
    Local jPath                           As Json
    Local cAliasWS  := 'SF2'              As Character

    //Busca os dados que o usuário informou
    jPath := JsonObject():New()
    jPath := oRest:getQueryRequest()
  
    //Caso haja conteúdo e não esteja vazio o ID
    If jPath != Nil .And. ! Empty(jPath:GetJsonObject('id'))
  
        DbSelectArea(cAliasWS)
        (cAliasWS)->(DbSetOrder(1))
  
        //Se não encontrar o registro
        If ! (cAliasWS)->(MsSeek(FWxFilial(cAliasWS) + jPath:GetJsonObject('id') ))
            oRest:setStatusCode(500)
            jResponse['errorId']  := 'E401'
            jResponse['error']    := 'could not find an invoice.'
            jResponse['solution'] := 'could not find invoice in'+ cAliasWS +',search other invoice '
  
        //Define o retorno
        Else
            //Define o retorno
            jResponse['doc'] := (cAliasWS)->F2_DOC 
            jResponse['cliente'] := (cAliasWS)->F2_CLIENTE 
            jResponse['loja'] := (cAliasWS)->F2_LOJA 
            jResponse['serie'] := (cAliasWS)->F2_SERIE 
        EndIf
  
    //Do contrário, irá retornar uma mensagem que não foi encontrado
    Else
        oRest:setStatusCode(500)
        jResponse['errorId']  := 'E400'
        jResponse['error']    := 'Empty ID'
        jResponse['solution'] := 'Enter the ID'
    EndIf
  
    //Encerra retornando o JSON
    oRest:setKeyHeaderResponse('Content-Type','application/json')
    oRest:setResponse(jResponse:toJSON())
Return




